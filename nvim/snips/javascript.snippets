snippet befe "beforeEach(() =>..."
beforeEach(() => {
	$0
})

endsnippet

snippet bef "before(() =>..."
before(() => {
	$0
})

endsnippet

snippet afe "afterEach(() =>..."
afterEach(() => {
	$0
})

endsnippet

snippet af "after(() =>..."
after(() => {
	$0
})

endsnippet

snippet it "it('some statement', () =>...)"
it('$1', () => {
	$0
})
endsnippet

snippet des "describe('something', function()...)"
describe('$1', () => {
	$0
})
endsnippet

snippet con "context('something', function()...)"
context('$1', () => {
	$0
})
endsnippet

snippet clog "console.log('...')"
console.log('$1')
$0
endsnippet

snippet cinfo "console.info(...)"
console.info($1)
$0
endsnippet

snippet rfn "cons Name = () => {}"
const ${1:Name} = (${2:{${3:prop1}}:Props}) => {
	$0
}
endsnippet

snippet ed "export default"
export default $0
endsnippet

snippet react
import * as React from 'react'
$0
endsnippet

snippet moment
import moment from 'moment'
$0
endsnippet

snippet flow
// @flow

$0
endsnippet

snippet imp "import ..."
import ${1:{ ${2:Module} }} from '${3:path}'
endsnippet

snippet conf "const name = () => {...}"
const ${1:name} = (${2:args}) => {
	$0
}
endsnippet

snippet props "type Props ..."
type Props = {
	$0
}
endsnippet

snippet children "children: React.Node"
children: React.Node
endsnippet

snippet ret "return ()"
return (
	$0
)
endsnippet

snippet useS "const [val, hook] = React.useState<Type>(val)"
const [${1:value}, set${1/\w+\s*/\u$0/}] = React.useState${2:<${3:Type}>}(${4:val})
endsnippet

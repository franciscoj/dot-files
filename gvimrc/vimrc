set shell=/bin/bash

" Setup vundler
set rtp+=~/.vim/vundle.git/
call vundle#rc()

" VIM plugins
" File types
Bundle 'Textile-for-VIM'
Bundle 'cucumber.zip'
Bundle "git://github.com/pangloss/vim-javascript.git"
Bundle "haml.zip"
Bundle "rails.vim"
Bundle "https://github.com/bronson/vim-ruby-block-conv.git"
Bundle 'rubycomplete.vim'
" External tools
Bundle 'ack.vim'
Bundle 'git.zip'
Bundle 'fugitive.vim'
" Edition tools
Bundle 'surround.vim'
Bundle 'ragtag.vim'
Bundle 'The-NERD-Commenter'
Bundle 'SuperTab-continued.'
Bundle "matchit.zip"
Bundle 'delimitMate.vim'
Bundle "unimpaired.vim"
Bundle "git://github.com/godlygeek/tabular.git"
Bundle "https://github.com/bronson/vim-trailing-whitespace.git"
" Exploring and buffers
Bundle "git://github.com/wycats/nerdtree.git"
Bundle "git://github.com/msanders/snipmate.vim.git"
Bundle "git://github.com/scrooloose/snipmate-snippets.git"
Bundle "ZoomWin"
Bundle "Indent-Guides"
" Testing
Bundle 'bufexplorer.zip'

" No need to make it compatible with VI
set nocompatible

" Map the leader character to "," instead of \ (much more easy to use in a Spanish keyboard)
let mapleader=","

" show line numbers
set nu
set ruler

" Highlight the line with the cursor on it
set cursorline

" Use railscasts colorscheme by Ryan Bates
colorscheme railscasts

" Map for ack.vim
nnoremap <leader>a :Ack<space>
" Show/Hide invisibles
nmap <leader>l :set list!<cr>
" Map for ZoomWin
map <Leader>z :ZoomWin<CR>
" Map toggle the nerdtree with F2
map <F2> :NERDTreeToggle<cr>
" Open fugitive's git status
map <F3> :Gstatus<CR>
" Use F4 to clear unwanted whitespace
map <F4> :FixWhitespace<CR>
" Unhighlight search
map <F5> :noh<CR>
" Format code
map   <silent> <F6> mmgg=G`m^
imap  <silent> <F6> <Esc> mmgg=G`m^

" Set invisibles to the same as in TextMate
set listchars=tab:▸\ ,eol:¬,trail:.

" Filetype highlighting and indentation activation
syntax on
filetype on
filetype plugin on
filetype indent on

" Adding files not finishing on .rb to the ruby file type highlighting
au BufRead,BufNewFile {caprc,autotest,Capfile,Gemfile,Rakefile,Thorfile,Vagrantfile,config.ru,.caprc,*.thor} set ft=ruby
"ruby autocomplete
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
"improve autocomplete menu color
highlight Pmenu ctermbg=238 gui=bold

" Tab completion
"set wildmode=list:longest,list:full
set wildignore+=*.o,*.obj,.git,*.rbc

" set the indenting configuration
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

" remove bells and properly config the status line
set novisualbell  " No blinking .
set noerrorbells  " No noise.

" Always show status line.
set laststatus=2
" show git status on vim's status line (using fugitive)
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P

" Added English spellcheck
set spell
set spelllang=en_us

" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

" Options for vimdiff
set diffopt+=vertical,iwhite

" Store swap files in a common directory
set directory=~/.vim/swap,.

" Align | characters on features
inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a

function! s:align()
  let p = '^\s*|\s.*\s|\s*$'
  if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    Tabularize/|/l1
    normal! 0
    call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction

" Don't really know what this does, but Vim is a bit more stable with
" RVM using this
set shell=/bin/bash
" No need to make it compatible with VI
set nocompatible
filetype off " Asked by Vundle

" ******************************************************************************
" Setup vundler and plugins
" ******************************************************************************
set rtp+=~/.vim/vundle.git/
call vundle#rc()
" File types
Bundle 'Textile-for-VIM'
Bundle 'cucumber.zip'
Bundle "pangloss/vim-javascript"
Bundle "haml.zip"
Bundle "rails.vim"
Bundle "bronson/vim-ruby-block-conv"
Bundle 'rubycomplete.vim'
" External tools
Bundle 'ack.vim'
Bundle 'git.zip'
Bundle 'fugitive.vim'
" Edition tools
Bundle 'surround.vim'
Bundle 'ragtag.vim'
Bundle 'tComment'
Bundle 'SuperTab-continued.'
Bundle "matchit.zip"
Bundle 'delimitMate.vim'
Bundle "unimpaired.vim"
Bundle "godlygeek/tabular"
Bundle "bronson/vim-trailing-whitespace"
Bundle 'textobj-user'
Bundle 'nelstrom/vim-textobj-rubyblock'
Bundle 'Syntastic'
" Exploring and buffers
Bundle "scrooloose/nerdtree"
Bundle "msanders/snipmate.vim"
Bundle "ZoomWin"
Bundle "Indent-Guides"
Bundle 'bufexplorer.zip'
" Tags
Bundle 'xolox/vim-easytags'
Bundle 'taglist.vim'
" I'm just TESTING this
Bundle 'repeat.vim'

" ******************************************************************************
" Make it pretty
" ******************************************************************************
" Filetype highlighting and indentation activation
syntax on
filetype on
filetype plugin on
filetype indent on

set guioptions=ac
colorscheme railscasts
set diffopt+=iwhite
set number
set ruler " Show position in the file
set cursorline
set cpoptions+=$ " Mark with a $ at the end of a 'change' command
set listchars=tab:▸\ ,eol:¬,trail:. " Same invisibles as in TextMate
" Indent using 2 spaces
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set laststatus=2 " Always show status line.
" Show fugitive.vim's GIT status
set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P
" Warn about syntactic errors using Syntastic.vim
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_enable_signs=1

set colorcolumn=80

" ******************************************************************************
" Some defaults I like/need
" ******************************************************************************
set scrolloff=8 " Leave 8 lines before start scrolling
let mapleader=","
runtime macros/matchit.vim " Needed for the ruby block object plugin
set spell
set spelllang=en_us
set directory=~/.vim/swap,. " Store swap files in a common directory
" Searching
set hlsearch
set incsearch
set ignorecase
set smartcase
" Don't forget to set ft for Ruby files
au BufRead,BufNewFile {caprc,autotest,Capfile,Gemfile,Rakefile,Thorfile,Vagrantfile,Guardfile,config.ru,.caprc,*.thor} set ft=ruby

" ******************************************************************************
" Auto completion
" ******************************************************************************
set wildmenu
set wildmode=longest,list
set wildignore+=*.o,*.obj,.git,*.rbc
" Auto complete for ruby
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
"improve autocomplete menu color
highlight Pmenu ctermbg=238 gui=bold

" ******************************************************************************
" Some custom key mapping
" ******************************************************************************
nmap <silent> ,ev :e $MYVIMRC
nmap <silent> ,sv :so $MYVIMRC
nmap <silent> ,l :set list!<cr>
nmap <silent> ,gs :Gstatus<CR>
nmap <silent> ,gd :Gdiff<CR>
imap ,f <Esc> mmgg=G`m^
map ,f mmgg=G`m^
map ,z :ZoomWin<CR>
map ,t :NERDTreeToggle<cr>
map ,,t :TlistOpen<cr>
map <F2> :FixWhitespace<CR>
map ,n :noh<CR>
map ,rt :!ctags --extra=+f -R * `bundle show rails`/../* <CR><CR>

noremap ,a :Ack<space>
noremap ,g :Git<space>
noremap <silent> ,h :wincmd h<CR>
noremap <silent> ,j :wincmd j<CR>
noremap <silent> ,k :wincmd k<CR>
noremap <silent> ,l :wincmd l<CR>

nnoremap // :TComment<CR>
vnoremap // :TComment<CR>

" Align Cucumber tables with Tabular plugin
inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a
function! s:align()
  let p = '^\s*|\s.*\s|\s*$'
  if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    Tabularize/|/l1
    normal! 0
    call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction

" Source snippets support functions
source ~/.vim/bundle/snipmate.vim/snippets/support_functions.vim

if has("gui_macvim")
  " set the vim windows size
  set lines=55 columns=150
  " Set the macvim font
  set guifont=Monaco:h13
endif
